{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Vehicle Tranfer App ",
      "description": "This is an application that will perform transfer of vehicles between users"
    },
    "host": "localhost:8000",
    "basePath": "/api/",
    "tags": [
      {
        "name": "Users",
        "description": "API for users"
      },
      {
        "name": "Applications",
        "description": "API for applications"
      },
      {
        "name": "Vehicles",
        "description": "API for vehicles"
      }
    ],
    "schemes": ["http", "https"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "paths": {
      "/addUser": {
        "post": {
          "tags": ["Users"],
          "summary": "Add new user in the system",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters":[{
            "in":"body",
            "name":"body",
            "description":"User that will be added to the system",
            "required":true,
            "schema": {
                "$ref": "#/definitions/User"
            }
          }],
          "responses": {
            "200": {
              "description": "Successful operation"
            },
            "404": {
              "description": "Invalid Input"
            }
          }
        }
      },
      "/loginUser": {
        "post": {
          "tags": ["Users"],
          "summary": "Login user in the system",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters":[
            {
              "name":"username",
              "in":"query",
              "type":"string",
              "description":"Username for login"
            },
            {
              "name":"password",
              "in":"query",
              "type":"string",
              "description":"Password for login"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation"
            },
            "404": {
              "description": "Invalid username and/or password"
            },
            "400": {
              "description": "User doesn't exist"
            }
          }
        }
      },
      "/logoutUser": {
        "get": {
          "tags": ["Users"],
          "summary": "Logout user from the system",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters":[],
          "responses": {
            "200": {
              "description": "Successful operation"
            }
          }
        }
      },
      "/addApplication": {
        "post": {
          "tags": ["Applications"],
          "summary": "Add a new application",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters":[{
            "in":"body",
            "name":"body",
            "description":"Application that will be added to the system",
            "required":true,
            "schema": {
                "$ref": "#/definitions/Application"
            }
          }],
          "responses": {
            "200": {
              "description": "Successful operation"
            },
            "400": {
              "description": "Create of new application failed"
            }
          }
        }
      },
      "/findApplicationByStatus": {
        "get": {
          "tags": ["Applications"],
          "summary": "Find application by status",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters":[{
            "name":"status",
            "in":"query",
            "type":"string",
            "enum":["Pending", "Completed", "Rejected"],
            "default":"Pending",
            "description":"Search application based on status",
            "required":true
          }],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "type":"array",
                "items":{
                  "$ref": "#/definitions/Application"
                }
              }
            },
            "400":{
              "description": "Failed to find application"
            }
          }
        }
      },
      "/findApplicationbyId": {
        "get": {
          "tags": ["Applications"],
          "summary": "Get application info by application Id",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters":[
          {
            "name":"applicationID",
            "in":"query",
            "type":"integer",
            "description":"Application id to search with"
          }],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "type":"array",
                "items":{
                  "$ref": "#/definitions/Application"
                }
              }
            },
            "400":{
              "description": "No application found with this id"
            }
          }
        }
      },
      "/findApplicationbyUser": {
        "get": {
          "tags": ["Applications"],
          "summary": "Find applications of current user",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters":[
          {
            "name":"userID",
            "in":"query",
            "type":"integer",
            "description":"User id to search with"
          }],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "type":"array",
                "items":{
                  "$ref": "#/definitions/Application"
                }
              }
            },
            "400":{
              "description": "No application found for this user"
            }
          }
        }
      },
      "/editApplication": {
        "put": {
          "tags": ["Applications"],
          "summary": "Edit content of an application",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters":[{
            "in":"body",
            "name":"body",
            "description":"Application that will be updated in the system",
            "required":true,
            "schema": {
                "$ref": "#/definitions/Application"
            }
          }],
          "responses": {
            "200": {
              "description": "Successful operation"
            },
            "400": {
              "description": "Edit Application Failed"
            }
          }
        }
      },
      "/editApplicationStatus": {
        "put": {
          "tags": ["Applications"],
          "summary": "Edit status of an application",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters":[
            {
              "name":"applicationID",
              "in":"query",
              "type":"integer",
              "description":"Application id to search with"
            },
            {
            "name":"status",
            "in":"query",
            "type":"string",
            "enum":["Pending", "Completed", "Rejected"],
            "default":"Pending",
            "description":"New status of the application",
            "required":true
          }],
          "responses": {
            "200": {
              "description": "Successful operation"
            },
            "400": {
              "description": "Edit Application status Failed"
            }
          }
        }
      },
      "/addVehicle": {
        "post": {
          "tags": ["Vehicles"],
          "summary": "Add a new vehicle",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters":[{
            "in":"body",
            "name":"body",
            "description":"Do not use directly! Operation is performed only through application",
            "required":true,
            "schema": {
                "$ref": "#/definitions/Vehicle"
            }
          }],
          "responses": {
            "200": {
              "description": "Successful operation"
            },
            "400": {
              "description": "Invalid Input"
            }
          }
        }
      },
      "/findVehicle": {
        "get": {
          "tags": ["Vehicles"],
          "summary": "Find information of a vehicle",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters":[{
            "name":"vehicle number",
            "in":"query",
            "type":"string",
            "description":"Do not use directly! Operation is performed only through application",
            "required":true
          }],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Vehicle"
              }
            },
            "400": {
                "description": "Invalid vehicle number"
              }
          }
        }
      },
      "/editVehicle": {
        "put": {
          "tags": ["Vehicles"],
          "summary": "Edit information of a vehicle",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters":[{
            "in":"body",
            "name":"body",
            "description":"Do not use directly! Operation is performed only through application",
            "required":true,
            "schema": {
                "$ref": "#/definitions/Vehicle"
            }
          }],
          "responses": {
            "200": {
              "description": "Successful operation"
            },
            "405": {
              "description": "Invalid Input"
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "required": ["first_name", "last_name", "email", "username", "password"],
        "properties": {
          "userID": {
            "type": "integer",
            "format": "int32",
            "uniqueItems": true
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "description": "Role of user",
            "enum": ["citizen", "employee"]
          },
          "position": {
            "type": "string"
          },
          "registrationCode": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Application": {
        "required": ["sellerCode", "buyerCode", "vehicleNum"],
        "properties": {
          "appID": {
            "type": "integer",
            "format": "int32",
            "uniqueItems": true
          },
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "vehicleID": {
            "type": "integer",
            "format": "int32"
          },
          "sellerCode": {
            "type": "integer",
            "format": "int64"
          },
          "buyerCode": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "description": "Status of application",
            "enum": ["Pending", "Completed", "Rejected"]
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Vehicle": {
        "required": ["vehicleNum", "certificateDate", "type"],
        "properties": {
          "vehicleID": {
              "type": "integer",
              "format": "int32",
              "uniqueItems": true
            },
            "vehicleNum": {
              "type": "string"
            },
            "certificateDate": {
              "type": "string",
              "format": "date"
            },
            "type": {
              "type": "string",
              "description": "Type of vehicle",
              "enum": ["Car", "Motorcycle", "Truck", "Boat"]
            }
        }
      }
    }
}